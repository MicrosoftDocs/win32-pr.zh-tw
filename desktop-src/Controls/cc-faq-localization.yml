### YamlMime:FAQ
metadata:
  title: 通用控制項的當地語系化支援
  description: 本主題說明通用控制項內建的國家語言的支援。
  ms.assetid: c5720198-9071-4213-8dad-50b4c015c5f0
  ms.topic: article
  ms.date: 05/31/2018
  ms.openlocfilehash: 8061d92050498fa95a6692243dc81bc5ef56f8ad
  ms.sourcegitcommit: 61a4c522182aa1cacbf5669683d9570a3bf043b2
  ms.translationtype: MT
  ms.contentlocale: zh-TW
  ms.lasthandoff: 08/26/2021
  ms.locfileid: "122884651"
title: 通用控制項的當地語系化支援
summary: >
  本主題說明通用控制項內建的國家語言的支援。 內建的國家語言支援可簡化當地語系化應用程式的執行。
sections:
- name: 忽略
  questions:
  - question: >
      指定通用控制項的語言
    answer: >
      如果您想要指定與系統語言不同之通用控制項的語言，請呼叫 [**InitMUILanguage**](/windows/desktop/api/Commctrl/nf-commctrl-initmuilanguage)。 這個函式所指定的語言只會套用至呼叫函式的進程。


      若要判斷通用控制項目前所使用的語言，請呼叫 [**GetMUILanguage**](/windows/desktop/api/Commctrl/nf-commctrl-getmuilanguage)。 它會傳回先前呼叫 [**InitMUILanguage**](/windows/desktop/api/Commctrl/nf-commctrl-initmuilanguage)所設定的值。 傳回的語言是針對呼叫它的進程所指定的語言。 如果尚未呼叫 **InitMUILanguage** ，或從另一個進程呼叫， **GetMUILanguage** 將會傳回預設值。
  - question: >
      在對話方塊中指定控制項的語言
    answer: "不同于通用控制項，預先定義的控制項（例如按鈕或編輯方塊）預設不會使用目前的系統語言。 原生字型控制項是不可見的控制項，可在背景中運作，以允許對話方塊的預先定義控制項顯示目前的系統語言。\n\n若要使用原生字型控制項，請遵循此程式。\n\n1.  藉由呼叫 [**InitCommonControlsEx**](/windows/desktop/api/Commctrl/nf-commctrl-initcommoncontrolsex)來初始化原生字型控制項。 將 *lpInitCtrls* 所指向之 [**INITCOMMONCONTROLSEX**](/windows/win32/api/commctrl/ns-commctrl-initcommoncontrolsex)結構的 **DWICC** 成員設定為 [ICC \\_ NATIVEFNTCTL \\_ 類別]。\n2.  將控制項新增至對話方塊的資源腳本。 設定下列一或多個樣式旗標，以指定將會影響哪些控制項。 \n\n      <style type=\"text/css\">. tg {border-collapse：折迭; 框線間距： 0;}。 tg td {border 色：黑色; 框線樣式：實線; 框線寬度： 1px; font-family： Arial，sans-serif; font-size： 14px; 溢位： hidden; 填補： 10px 5px; 斷詞： normal;}. tg （框線色彩：黑色; 框線樣式：實線; 框線寬度： 1px; font-family： Arial，sans-serif; font-size： 14px; font-size： normal; 溢位： hidden; 填補： 10px 5px; 單字-break： normal;}. tg. tg-0pky {border color： inherit; 文字對齊：左方; 垂直對齊： top} &lt; /style &gt;<table class=\"tg\">\n      <thead>\n      <tr>\n      <th class=\"tg-0pky\">國旗</th>\n      <th class=\"tg-0pky\">適用於</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr>\n      <td class=\"tg-0pky\">NFS \\_ 編輯</td>\n      <td class=\"tg-0pky\">編輯控制項</td>\n      </tr>\n      <tr>\n      <td class=\"tg-0pky\">NFS \\_ 靜態</td>\n      <td class=\"tg-0pky\">靜態控制項</td>\n      </tr>\n      <tr>\n      <td class=\"tg-0pky\">NFS \\_ LISTCOMBO</td>\n      <td class=\"tg-0pky\">清單、ComboBox、清單視圖和 ComboBoxEx 控制項</td>\n      </tr>\n      <tr>\n      <td class=\"tg-0pky\">NFS \\_ 按鈕</td>\n      <td class=\"tg-0pky\">按鈕控制項</td>\n      </tr>\n      <tr>\n      <td class=\"tg-0pky\">NFS \\_ 全部</td>\n      <td class=\"tg-0pky\">所有控制項</td>\n      </tr>\n      <tr>\n      <td class=\"tg-0pky\">NFS \\_ USEFONTASSOC</td>\n      <td class=\"tg-0pky\">東亞平臺。 控制項使用字型關聯功能，而不是切換至原生字型。 所有其他平臺會忽略它。 這在 Windows Vista 中已被取代，而且在 comctl v6 中不受支援。 基於舊版原因，這存在於 comctl v5 中。</td>\n      </tr>\n      </tbody>\n      </table>\n     \n\n下列範例說明如何將原生字型控制項新增至資源腳本。 它會讓對話方塊的編輯、列出和下拉式方塊控制項使用目前的系統語言來顯示文字。\n\n\n```\nCONTROL    \"\",-1,\"NativeFontCtl\",NFS_EDIT|NFS_LISTCOMBO,0,0,0,0\n```\n"
additionalContent: "\n## <a name=\"related-topics\"></a>相關主題\n   [關於通用控制項](common-controls-intro.md)"
